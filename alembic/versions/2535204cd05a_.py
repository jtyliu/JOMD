"""Database creation

Revision ID: 2535204cd05a
Revises: 
Create Date: 2021-05-21 23:57:41.597453

"""
from alembic import op
import sqlalchemy as sa
import utils

# revision identifiers, used by Alembic.
revision = "2535204cd05a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "contest",
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("time_limit", sa.Integer(), nullable=True),
        sa.Column("is_rated", sa.Boolean(), nullable=True),
        sa.Column("rate_all", sa.Boolean(), nullable=True),
        sa.Column("has_rating", sa.Boolean(), nullable=True),
        sa.Column("rating_floor", sa.Integer(), nullable=True),
        sa.Column("rating_ceiling", sa.Integer(), nullable=True),
        sa.Column("hidden_scoreboard", sa.Boolean(), nullable=True),
        sa.Column("is_organization_private", sa.Boolean(), nullable=True),
        sa.Column("is_private", sa.Boolean(), nullable=True),
        sa.Column("tags", utils.db.Json(), nullable=True),
        sa.Column("format", utils.db.Json(), nullable=True),
        sa.Column("rankings", utils.db.Json(), nullable=True),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_table(
        "current_gitgud",
        sa.Column("_id", sa.Integer(), nullable=False),
        sa.Column("handle", sa.String(), nullable=True),
        sa.Column("guild_id", sa.Integer(), nullable=True),
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.Column("point", sa.Integer(), nullable=True),
        sa.Column("time", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "gitgud",
        sa.Column("_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("handle", sa.String(), nullable=True),
        sa.Column("guild_id", sa.Integer(), nullable=True),
        sa.Column("point", sa.Integer(), nullable=True),
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.Column("time", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "handle",
        sa.Column("_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("handle", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("guild_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_index(op.f("ix_handle_guild_id"), "handle", ["guild_id"], unique=False)
    op.create_index(op.f("ix_handle_handle"), "handle", ["handle"], unique=False)
    op.create_index(op.f("ix_handle_id"), "handle", ["id"], unique=False)
    op.create_table(
        "judge",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("ping", sa.Float(), nullable=True),
        sa.Column("load", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "language",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(), nullable=True),
        sa.Column("short_name", sa.String(), nullable=True),
        sa.Column("common_name", sa.String(), nullable=True),
        sa.Column("ace_mode_name", sa.String(), nullable=True),
        sa.Column("pygments_name", sa.String(), nullable=True),
        sa.Column("code_template", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "organization",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("short_name", sa.String(), nullable=True),
        sa.Column("is_open", sa.Boolean(), nullable=True),
        sa.Column("member_count", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "participation",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("cumulative_time", sa.Integer(), nullable=True),
        sa.Column("tiebreaker", sa.Float(), nullable=True),
        sa.Column("is_disqualified", sa.Boolean(), nullable=True),
        sa.Column("virtual_participation_number", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "problem",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("authors", utils.db.Json(), nullable=True),
        sa.Column("types", utils.db.Json(), nullable=True),
        sa.Column("group", sa.String(), nullable=True),
        sa.Column("time_limit", sa.Float(), nullable=True),
        sa.Column("memory_limit", sa.Integer(), nullable=True),
        sa.Column("language_resource_limits", utils.db.Json(), nullable=True),
        sa.Column("points", sa.Integer(), nullable=True),
        sa.Column("partial", sa.Boolean(), nullable=True),
        sa.Column("short_circuit", sa.Boolean(), nullable=True),
        sa.Column("is_organization_private", sa.Boolean(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "submission",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("time", sa.Float(), nullable=True),
        sa.Column("memory", sa.Float(), nullable=True),
        sa.Column("points", sa.Float(), nullable=True),
        sa.Column("result", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("case_points", sa.Float(), nullable=True),
        sa.Column("case_total", sa.Float(), nullable=True),
        sa.Column("cases", utils.db.Json(), nullable=True),
        sa.Column("_code", sa.String(), nullable=True),
        sa.Column("_user", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("points", sa.Float(), nullable=True),
        sa.Column("performance_points", sa.Float(), nullable=True),
        sa.Column("problem_count", sa.Integer(), nullable=True),
        sa.Column("rank", sa.String(), nullable=True),
        sa.Column("rating", sa.Integer(), nullable=True),
        sa.Column("volatility", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "contest_organization",
        sa.Column("contest_id", sa.String(), nullable=True),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["contest_id"],
            ["contest.key"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
    )
    op.create_table(
        "contest_participation",
        sa.Column("contest_id", sa.String(), nullable=True),
        sa.Column("participation_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["contest_id"],
            ["contest.key"],
        ),
        sa.ForeignKeyConstraint(
            ["participation_id"],
            ["participation.id"],
        ),
    )
    op.create_table(
        "contest_problem",
        sa.Column("contest_id", sa.String(), nullable=True),
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["contest_id"],
            ["contest.key"],
        ),
        sa.ForeignKeyConstraint(
            ["problem_id"],
            ["problem.code"],
        ),
    )
    op.create_table(
        "contest_user",
        sa.Column("contest_id", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["contest_id"],
            ["contest.key"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.create_table(
        "judge_language",
        sa.Column("judge_id", sa.String(), nullable=True),
        sa.Column("language_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["judge_id"],
            ["judge.name"],
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["language.id"],
        ),
    )
    op.create_table(
        "language_problem",
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.Column("language_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["language.id"],
        ),
        sa.ForeignKeyConstraint(
            ["problem_id"],
            ["problem.code"],
        ),
    )
    op.create_table(
        "language_submission",
        sa.Column("language_id", sa.Integer(), nullable=True),
        sa.Column("submission_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["language.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["submission.id"],
        ),
    )
    op.create_table(
        "organization_problem",
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["problem_id"],
            ["problem.code"],
        ),
    )
    op.create_table(
        "organization_user",
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.create_table(
        "participation_user",
        sa.Column("participation_id", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["participation_id"],
            ["participation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.create_table(
        "problem_submission",
        sa.Column("submission_id", sa.Integer(), nullable=True),
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["problem_id"],
            ["problem.code"],
        ),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["submission.id"],
        ),
    )
    op.create_table(
        "problem_user",
        sa.Column("problem_id", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["problem_id"],
            ["problem.code"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.create_table(
        "submission_user",
        sa.Column("submission_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["submission.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("submission_user")
    op.drop_table("problem_user")
    op.drop_table("problem_submission")
    op.drop_table("participation_user")
    op.drop_table("organization_user")
    op.drop_table("organization_problem")
    op.drop_table("language_submission")
    op.drop_table("language_problem")
    op.drop_table("judge_language")
    op.drop_table("contest_user")
    op.drop_table("contest_problem")
    op.drop_table("contest_participation")
    op.drop_table("contest_organization")
    op.drop_table("user")
    op.drop_table("submission")
    op.drop_table("problem")
    op.drop_table("participation")
    op.drop_table("organization")
    op.drop_table("language")
    op.drop_table("judge")
    op.drop_index(op.f("ix_handle_id"), table_name="handle")
    op.drop_index(op.f("ix_handle_handle"), table_name="handle")
    op.drop_index(op.f("ix_handle_guild_id"), table_name="handle")
    op.drop_table("handle")
    op.drop_table("gitgud")
    op.drop_table("current_gitgud")
    op.drop_table("contest")
    # ### end Alembic commands ###
